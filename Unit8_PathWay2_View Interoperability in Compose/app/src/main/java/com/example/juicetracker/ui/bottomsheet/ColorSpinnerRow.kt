/**
 * Package: com.example.juicetracker.ui.bottomsheet
 *
 * üßÉ M·ª§C ƒê√çCH:
 * T·∫°o giao di·ªán ch·ªçn m√†u n∆∞·ªõc √©p (JuiceColor) b·∫±ng Spinner (th√†nh ph·∫ßn View g·ªëc c·ªßa Android)
 * nh∆∞ng ƒë∆∞·ª£c t√≠ch h·ª£p m∆∞·ª£t m√† v√†o Jetpack Compose UI.
 *
 * ‚öôÔ∏è TH√ÄNH PH·∫¶N CH√çNH:
 * - [SpinnerAdapter]: B·ªô l·∫Øng nghe x·ª≠ l√Ω s·ª± ki·ªán khi ng∆∞·ªùi d√πng ch·ªçn m√†u trong Spinner.
 * - [findColorIndex]: H√†m ti·ªán √≠ch chuy·ªÉn ƒë·ªïi t√™n m√†u th√†nh ch·ªâ s·ªë trong danh s√°ch JuiceColor.
 * - [ColorSpinnerRow]: Th√†nh ph·∫ßn Composable hi·ªÉn th·ªã giao di·ªán ch·ªçn m√†u.
 *
 * üí° ·ª®NG D·ª§NG:
 * D√πng trong m√†n h√¨nh ‚ÄúTh√™m / Ch·ªânh s·ª≠a n∆∞·ªõc √©p‚Äù ƒë·ªÉ cho ph√©p ng∆∞·ªùi d√πng ch·ªçn m√†u t∆∞∆°ng ·ª©ng
 * v·ªõi lo·∫°i n∆∞·ªõc √©p h·ªç ƒëang th√™m v√†o ·ª©ng d·ª•ng.
 */

package com.example.juicetracker.ui.bottomsheet

import android.view.View
import android.widget.AdapterView
import android.widget.ArrayAdapter
import android.widget.Spinner
import androidx.compose.foundation.layout.fillMaxHeight
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.runtime.Composable
import androidx.compose.ui.Modifier
import androidx.compose.ui.res.stringResource
import androidx.compose.ui.viewinterop.AndroidView
import com.example.juicetracker.R
import com.example.juicetracker.data.JuiceColor


/**
 * üåÄ SpinnerAdapter
 *
 * Adapter l·∫Øng nghe c√°c s·ª± ki·ªán ch·ªçn item trong Spinner.
 *
 * @property onColorChange Callback ƒë∆∞·ª£c g·ªçi m·ªói khi ng∆∞·ªùi d√πng thay ƒë·ªïi l·ª±a ch·ªçn m√†u.
 *
 * **WHAT:**
 * - C√†i ƒë·∫∑t `AdapterView.OnItemSelectedListener` ƒë·ªÉ nh·∫≠n s·ª± ki·ªán ch·ªçn m√†u trong Spinner.
 *
 * **WHY:**
 * - Gi√∫p truy·ªÅn th√¥ng tin v·ªÅ m√†u ƒë∆∞·ª£c ch·ªçn t·ª´ th√†nh ph·∫ßn View (Spinner)
 *   sang Compose th√¥ng qua callback `onColorChange`.
 *
 * **C√ÅCH HO·∫†T ƒê·ªòNG:**
 * - Khi ng∆∞·ªùi d√πng ch·ªçn m·ªôt item: g·ªçi `onColorChange(position)`.
 * - N·∫øu kh√¥ng ch·ªçn g√¨: m·∫∑c ƒë·ªãnh ch·ªçn v·ªã tr√≠ 0.
 */
class SpinnerAdapter(
    val onColorChange: (Int) -> Unit
) : AdapterView.OnItemSelectedListener {

    /**
     * G·ªçi khi ng∆∞·ªùi d√πng ch·ªçn m·ªôt ph·∫ßn t·ª≠ trong Spinner.
     *
     * @param parent Spinner ch·ª©a danh s√°ch m√†u.
     * @param view View con ƒë∆∞·ª£c ch·ªçn (item hi·ªÉn th·ªã).
     * @param position V·ªã tr√≠ c·ªßa item ƒë∆∞·ª£c ch·ªçn.
     * @param id ID c·ªßa item (kh√¥ng d√πng ·ªü ƒë√¢y).
     */
    override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {
        onColorChange(position)
    }

    /**
     * G·ªçi khi kh√¥ng c√≥ item n√†o ƒë∆∞·ª£c ch·ªçn trong Spinner.
     * ·ªû ƒë√¢y ta ch·ªçn m·∫∑c ƒë·ªãnh l√† m√†u ƒë·∫ßu ti√™n (index 0).
     */
    override fun onNothingSelected(p0: AdapterView<*>?) {
        onColorChange(0)
    }
}




/**
 * üß© ColorSpinner
 *
 * Th√†nh ph·∫ßn giao di·ªán (Composable) hi·ªÉn th·ªã Spinner ch·ªçn m√†u n∆∞·ªõc √©p.
 *
 * @param onColorSpinnerPosition V·ªã tr√≠ m√†u hi·ªán t·∫°i ƒëang ƒë∆∞·ª£c ch·ªçn trong Spinner.
 * @param onColorChange Callback ƒë∆∞·ª£c g·ªçi khi ng∆∞·ªùi d√πng ch·ªçn m·ªôt m√†u kh√°c.
 * @param modifier Modifier Compose d√πng ƒë·ªÉ t√πy ch·ªânh b·ªë c·ª•c, k√≠ch th∆∞·ªõc, ho·∫∑c padding.
 *
 * **WHAT:**
 * - T·∫°o giao di·ªán ch·ªçn m√†u trong Compose b·∫±ng c√°ch nh√∫ng m·ªôt Spinner g·ªëc (Android View).
 * - Hi·ªÉn th·ªã danh s√°ch t√™n m√†u t·ª´ enum [JuiceColor].
 * - C·∫≠p nh·∫≠t m√†u hi·ªán t·∫°i v√† x·ª≠ l√Ω khi ng∆∞·ªùi d√πng ch·ªçn m√†u kh√°c.
 *
 * **WHY:**
 * - D√πng Spinner g·ªëc ƒë·ªÉ t·∫≠n d·ª•ng UI quen thu·ªôc v√† logic x·ª≠ l√Ω c√≥ s·∫µn c·ªßa Android.
 * - Gi√∫p d·ªÖ d√†ng t√°i s·ª≠ d·ª•ng trong c√°c th√†nh ph·∫ßn Compose kh√°c m√† kh√¥ng c·∫ßn vi·∫øt DropdownMenu th·ªß c√¥ng.
 *
 * **C√ÅCH HO·∫†T ƒê·ªòNG:**
 * 1. L·∫•y danh s√°ch t√™n hi·ªÉn th·ªã c·ªßa c√°c m√†u t·ª´ enum [JuiceColor].
 * 2. T·∫°o Spinner v√† g·∫Øn [ArrayAdapter] ƒë·ªÉ hi·ªÉn th·ªã danh s√°ch.
 * 3. D√πng [AndroidView] ƒë·ªÉ nh√∫ng Spinner v√†o Compose UI.
 * 4. G·∫Øn [SpinnerAdapter] ƒë·ªÉ x·ª≠ l√Ω khi ng∆∞·ªùi d√πng ch·ªçn m√†u.
 *
 * **V√ç D·ª§ S·ª¨ D·ª§NG:**
 * ```kotlin
 * ColorSpinner(
 *     onColorSpinnerPosition = 2,
 *     onColorChange = { newIndex -> viewModel.updateColor(newIndex) }
 * )
 * ```
 */
@Composable
fun ColorSpinnerRow(
    onColorSpinnerPosition: Int,
    onColorChange: (Int) -> Unit,
    modifier: Modifier = Modifier
) {
    // T·∫°o danh s√°ch t√™n m√†u t·ª´ enum JuiceColor (v√≠ d·ª•: "Red", "Green", "Purple", ...)
    val juiceArray = JuiceColor.entries.map { juiceColor ->
        stringResource(juiceColor.label)
    }

    // InputRow l√† th√†nh ph·∫ßn UI b·ªçc Spinner, hi·ªÉn th·ªã nh√£n "Color"
    InputRow(inputLabel = stringResource(R.string.color), modifier = modifier) {

        // AndroidView cho ph√©p nh√∫ng View truy·ªÅn th·ªëng v√†o trong Compose
        AndroidView(
            modifier = Modifier.fillMaxWidth(),
            factory = { context ->
                Spinner(context).apply {
                    adapter = ArrayAdapter(
                        context,
                        android.R.layout.simple_spinner_dropdown_item,
                        juiceArray
                    )
                }
            },
            update = { spinner ->
                spinner.setSelection(onColorSpinnerPosition)
                spinner.onItemSelectedListener = SpinnerAdapter(onColorChange)
            }
        )
    }
}
